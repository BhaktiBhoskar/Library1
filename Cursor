Explicit Cursor

DECLARE
   CURSOR prod_cursor IS
      SELECT product_id, product_name, price FROM productinfo;

   p_product_id   productinfo.product_id%TYPE;
   p_product_name productinfo.product_name%TYPE;
   p_price        productinfo.price%TYPE;
BEGIN
   OPEN prod_cursor;
   LOOP
      FETCH prod_cursor INTO p_product_id, p_product_name, p_price;
      EXIT WHEN prod_cursor%NOTFOUND;

      DBMS_OUTPUT.PUT_LINE('Product ID: ' || p_product_id);
      DBMS_OUTPUT.PUT_LINE('Product Name: ' || p_product_name);
      DBMS_OUTPUT.PUT_LINE('Price: ' || p_price);
   END LOOP;
   CLOSE prod_cursor;
END;
/

Implicit Cursor

declare
p_price productinfo.price%type;
begin
select price into p_price from productinfo where product_id=101;
if sql%found then
dbms_output.put_line('Price fetched:'||p_price);
else
dbms_output.put_line('Productinfo not found.');
end if;
end;
/


parameterized.sql
DECLARE
  CURSOR product_cursor(p_price_1 NUMBER) IS 
    SELECT product_id, product_name, price 
    FROM productinfo 
    WHERE price > p_price_1;

  p_product_id   productinfo.product_id%TYPE;
  p_product_name productinfo.product_name%TYPE;
  p_price productinfo.price%TYPE;

  v_input NUMBER;  
BEGIN
  v_input := &enter_price;

  DBMS_OUTPUT.PUT_LINE('Starting to fetch products above price ' || v_input || '...');

  OPEN product_cursor(v_input);
  LOOP
    FETCH product_cursor INTO p_product_id, p_product_name, p_price;
    EXIT WHEN product_cursor%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('pid: ' || p_product_id || ', name: ' || p_product_name || ', price: ' || p_price);
  END LOOP;
  CLOSE product_cursor;

  DBMS_OUTPUT.PUT_LINE('Done fetching products.');
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;
/

for loop.sql
DECLARE
v_increase NUMBER := 2.10;  
BEGIN
FOR rec IN (SELECT product_id, price FROM productinfo WHERE price < 5000) LOOP
UPDATE productinfo
SET price = rec.price * v_increase
WHERE product_id = rec.product_id;
END LOOP;
DBMS_OUTPUT.PUT_LINE('Prices updated.');
END;
/

Output:-
SQL*Plus: Release 21.0.0.0.0 - Production on Mon Sep 29 15:45:18 2025
Version 21.3.0.0.0

Copyright (c) 1982, 2021, Oracle.  All rights reserved.

Enter user-name: system
Enter password:
Last Successful login time: Sat Sep 27 2025 11:24:39 +05:30

Connected to:
Oracle Database 21c Express Edition Release 21.0.0.0.0 - Production
Version 21.3.0.0.0

SQL> CREATE TABLE product_info (
  2      product_id   NUMBER PRIMARY KEY,
  3      product_name VARCHAR2(50),
  4      price        NUMBER(10,2)
  5  );

Table created.

SQL> insert into productinfo values (100,'laptop',110);

1 row created.

SQL> insert into productinfo values (101,'Mobile',10000);

1 row created.

SQL> insert into productinfo values (102,'EarBuds',900);

1 row created.

SQL> insert into productinfo values (103,'SmartTV',30000);

1 row created.

SQL> select * from productinfo;

PRODUCT_ID PRODUCT_NAME                                            PRICE
---------- -------------------------------------------------- ----------
       100 laptop                                                    110
       101 Mobile                                                  10000
       102 EarBuds                                                   900
       103 SmartTV                                                 30000

SQL> @"C:\Users\Bhoskar Bhakti\OneDrive\Desktop\pl sql\IMPLICIT.sql"

PL/SQL procedure successfully completed.

SQL> @"C:\Users\Bhoskar Bhakti\OneDrive\Desktop\pl sql\EXPLICIT.sql"

PL/SQL procedure successfully completed.

SQL> @"C:\Users\Bhoskar Bhakti\OneDrive\Desktop\pl sql\PARAMETERIZED.sql"
Enter value for enter_price: 110
old  13:   v_input := &enter_price;
new  13:   v_input := 110;

PL/SQL procedure successfully completed.

SQL> @"C:\Users\Bhoskar Bhakti\OneDrive\Desktop\pl sql\PARAMETERIZED.sql"
Enter value for enter_price: 10000
old  13:   v_input := &enter_price;
new  13:   v_input := 10000;

PL/SQL procedure successfully completed.

SQL> @"C:\Users\Bhoskar Bhakti\OneDrive\Desktop\pl sql\PARAMETERIZED.sql"
Enter value for enter_price: 900
old  13:   v_input := &enter_price;
new  13:   v_input := 900;

PL/SQL procedure successfully completed.

SQL> @"C:\Users\Bhoskar Bhakti\OneDrive\Desktop\pl sql\foor loop.sql"
SP2-0310: unable to open file "C:\Users\Bhoskar Bhakti\OneDrive\Desktop\pl sql\foor loop.sql"
SQL> @"C:\Users\Bhoskar Bhakti\OneDrive\Desktop\pl sql\for loop.sql"

PL/SQL procedure successfully completed.

SQL> select * from productinfo;

PRODUCT_ID PRODUCT_NAME                                            PRICE
---------- -------------------------------------------------- ----------
       100 laptop                                                    231
       101 Mobile                                                  10000
       102 EarBuds                                                  1890
       103 SmartTV                                                 30000



